apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: nginx-oc-front
  name: nginx-oc-front
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    app: nginx-oc-front
    deploymentconfig: nginx-oc-front
  template:
    metadata:
      labels:
        app: nginx-oc-front
        deploymentconfig: nginx-oc-front
    spec:
      containers:
        - image: >-
            registry.sigma.cmri/test/nginx-oc-front@sha256:a31da39c631489e291e0f837eb693a604586014c0a00b9a503da812d72b01124
          imagePullPolicy: Always
          name: nginx-oc-front
          ports:
            - containerPort: 10005
              protocol: TCP
            - containerPort: 10006
              protocol: TCP
            - containerPort: 10007
              protocol: TCP
            - containerPort: 10008
              protocol: TCP
            - containerPort: 10011
              protocol: TCP
            - containerPort: 10013
              protocol: TCP
            - containerPort: 10015
              protocol: TCP
            - containerPort: 11009
              protocol: TCP
            - containerPort: 11010
              protocol: TCP
            - containerPort: 11012
              protocol: TCP
            - containerPort: 11014
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /zpc/ocean-front_1.4.2/static/config.js
              name: volume-9bucr
              subPath: config.js
            - mountPath: /zpc/nginx_1.13.12/nginx_1.13.12/conf/nginx.conf
              name: volume-0gcbr
              subPath: nginx.conf

      
      serviceAccountName: mysvcacct
      volumes:
        - configMap:
            defaultMode: 422
            name: nginx-oc-front-config
          name: volume-9bucr
        - configMap:
            defaultMode: 422
            name: nginx-oc-front-nginxconfig
          name: volume-0gcbr

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-api-oc
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-api-oc: 'true'
  template:
    metadata:
      labels:
        zw-api-oc: 'true'
    spec:
      containers:
        - env:
            - name: nginx_img_url
              value: zw-nginx-oc
            - name: key_ocean_ip
              value: localhost
            - name: mysql_ip
              value: zw-mysql-oc
            - name: kafka_address
              value: 'zw-kaf1:9092'
            - name: zookeeper_address
              value: 'zw-zk1:2181'
            - name: engine_ip
              value: zw-facego
            - name: orc_ip
              value: 192.168.40.116
            - name: orc_live_ip
              value: 192.168.40.116
            - name: redis_ip
              value: zw-redisp
            - name: ftp_ip
              value: 192.168.40.116
          image: 'registry.sigma.cmri/test/ocean-api:1.4.2'
          imagePullPolicy: Always
          name: zw-api-oc
          ports:
            - containerPort: 11006
              protocol: TCP
          volumeMounts:
            - mountPath: /home/nasdata
              name: nasdata
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      
      serviceAccountName: mysvcacct
      volumes:
        - hostPath:
            path: /data/zw/nasdata
            type: ''
          name: nasdata
  triggers:
    - type: ConfigChange
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-facego
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-facego: 'true'
  template:
    metadata:
      labels:
        zw-facego: 'true'
    spec:
      containers:
        - env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: all
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: 'compute,utility'
            - name: NVIDIA_REQUIRE_CUDA
              value: cuda>=5.0
          image: 'registry.sigma.cmri/test/facego:v1.1'
          imagePullPolicy: Always
          name: zw-facego
          ports:
            - containerPort: 7100
              protocol: TCP
            - containerPort: 8556
              protocol: TCP
            - containerPort: 7102
              protocol: TCP
          volumeMounts:
            - mountPath: /var/tmp/FaceGo/AlgorithmRecog/config/extra_conf_gpu.txt
              name: volume-mxyon
              subPath: extra_conf_gpu.txt
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      
      serviceAccountName: mysvcacct
      volumes:
        - configMap:
            defaultMode: 422
            name: extra-conf-gpu
          name: volume-mxyon
  triggers:
    - type: ConfigChange

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-kaf1
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-kaf1: 'true'
  template:
    metadata:
      labels:
        zw-kaf1: 'true'
    spec:
      containers:
        - env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: 'zw-zk1:2181'
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: zw-kaf1
          image: 'registry.sigma.cmri/test/kafka:latest'
          imagePullPolicy: Always
          name: zw-kaf1
          ports:
            - containerPort: 9092
              protocol: TCP
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      
      serviceAccountName: mysvcacct
  triggers:
    - type: ConfigChange
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-mobilesoldierservice
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-mobilesoldierservice: 'true'
  template:
    metadata:
      labels:
        zw-mobilesoldierservice: 'true'
    spec:
      containers:
        - command:
            - /myapp/EasyDarwin/EasyDarwin-linux-8.1.0-1901141151/easydarwin
          env:
            - name: appid
              value: a54fce347adf4ca88f740c0eb230e4e3
            - name: appsecret
              value: $2a$10$dJDxml5rWVC4EanD7TbsgOfqTwcr/tcq5DAGR6KIwBrqo4GuPUHte
            - name: oceanaddress
              value: 'http://zw-api-oc:11006'
            - name: mqttserverurl
              value: 'tcp://localhost:1883'
            - name: subaddress
              value: 'http://zw-mobilesoldierservice:18080'
          image: 'registry.sigma.cmri/test/mobilesoldier:v0.2'
          imagePullPolicy: Always
          name: zw-mobilesoldierservice
          ports:
            - containerPort: 1883
              protocol: TCP
            - containerPort: 10554
              protocol: TCP
            - containerPort: 18080
              protocol: TCP
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      
      serviceAccountName: mysvcacct
  triggers:
    - type: ConfigChange

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-mysql-oc
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-mysql-oc: 'true'
  template:
    metadata:
      labels:
        zw-mysql-oc: 'true'
    spec:
      containers:
        - image: 'registry.sigma.cmri/test/mysql-oc:last'
          imagePullPolicy: Always
          name: zw-mysql-oc
          ports:
            - containerPort: 3306
              protocol: TCP
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      
      serviceAccountName: mysvcacct
      volumes:
        - hostPath:
            path: /data/zw/mysql
            type: ''
          name: mysql
  triggers:
    - type: ConfigChange

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-nginx-oc
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-nginx-oc: 'true'
  template:
    metadata:
      labels:
        zw-nginx-oc: 'true'
    spec:
      containers:
        - env:
            - name: key_ocean
              value: 192.168.40.116
            - name: key_facebigdata
              value: 192.168.40.116
            - name: key_ocean_manage
              value: 192.168.40.116
            - name: ocean_entry_http
              value: 192.168.40.116
            - name: key_ocean_socket_ip
              value: 192.168.40.116
          image: 'registry.sigma.cmri/test/nginx-ocean:v1'
          imagePullPolicy: Always
          name: zw-nginx-oc
          volumeMounts:
            - mountPath: /home/nasdata
              name: nasdata
            - mountPath: /zpc/nginx_1.13.12/nginx_1.13.12/conf/nginx.conf
              name: volume-sbwbx
              subPath: nginx.conf
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      
      serviceAccountName: mysvcacct
      volumes:
        - hostPath:
            path: /data/zw/nasdata
            type: ''
          name: nasdata
        - configMap:
            defaultMode: 422
            name: zw-nginx-config
          name: volume-sbwbx
  triggers:
    - type: ConfigChange

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-ocean-deletefile
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-ocean-deletefile: 'true'
  template:
    metadata:
      labels:
        zw-ocean-deletefile: 'true'
    spec:
      containers:
        - env:
            - name: nginx_img_url
              value: zw-nginx-oc
            - name: mysql_ip
              value: zw-mysql-oc
          image: 'registry.sigma.cmri/test/ocean-deletefile:v1'
          imagePullPolicy: Always
          name: zw-ocean-deletefile
          ports:
            - containerPort: 11010
              protocol: TCP
          volumeMounts:
            - mountPath: /home/nasdata
              name: nasdata
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      
      serviceAccountName: mysvcacct
      volumes:
        - hostPath:
            path: /data/zw/nasdata_2
            type: ''
          name: nasdata
  triggers:
    - type: ConfigChange
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-ocean-manager
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-ocean-manager: 'true'
  template:
    metadata:
      creationTimestamp: null
      labels:
        zw-ocean-manager: 'true'
    spec:
      containers:
        - env:
            - name: nginx_img_url
              value: zw-nginx-oc
            - name: mysql_ip
              value: zw-mysql-oc
            - name: kafka_address
              value: 'zw-kaf1:9092'
            - name: zookeeper_address
              value: 'zw-zk1:2181'
            - name: engine_ip
              value: zw-facego
            - name: orc_ip
              value: 192.168.40.116
            - name: orc_live_ip
              value: 192.168.40.116
            - name: redis_ip
              value: zw-redisp
          image: 'registry.sigma.cmri/test/ocean-manager:v1'
          imagePullPolicy: Always
          name: zw-ocean-manager
          ports:
            - containerPort: 11001
              hostPort: 11001
              protocol: TCP
          volumeMounts:
            - mountPath: /home/nasdata
              name: nasdata
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      serviceAccountName: mysvcacct
      volumes:
        - hostPath:
            path: /data/zw/nasdata_2
            type: ''
          name: nasdata
  triggers:
    - type: ConfigChange

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-ocean-socket
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-ocean-socket: 'true'
  template:
    metadata:
      labels:
        zw-ocean-socket: 'true'
    spec:
      containers:
        - env:
            - name: nginx_img_url
              value: zw-nginx-oc
            - name: mysql_ip
              value: zw-mysql-oc
            - name: kafka_address
              value: 'zw-kaf1:9092'
            - name: zookeeper_address
              value: 'zw-zk1:2181'
            - name: engine_ip
              value: zw-facego
            - name: redis_ip
              value: zw-redisp
          image: 'registry.sigma.cmri/test/ocean-socket:v1'
          imagePullPolicy: Always
          name: zw-ocean-socket
          ports:
            - containerPort: 11011
              protocol: TCP
          volumeMounts:
            - mountPath: /home/nasdata
              name: nasdata
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      serviceAccountName: mysvcacct
      volumes:
        - hostPath:
            path: /data/zw/nasdata_2
            type: ''
          name: nasdata
  triggers:
    - type: ConfigChange

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-redisp
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-redisp: 'true'
  template:
    metadata:
      labels:
        zw-redisp: 'true'
    spec:
      containers:
        - args:
            - '--requirepass'
            - Anfang@123!
          image: 'registry.sigma.cmri/test/redis:latest'
          imagePullPolicy: Always
          name: zw-redisp
          ports:
            - containerPort: 6379
              protocol: TCP
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      serviceAccountName: mysvcacct
  triggers:
    - type: ConfigChange

---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: zw-zk1
  namespace: zhuowang
spec:
  replicas: 1
  selector:
    zw-zk1: 'true'
  template:
    metadata:
      labels:
        zw-zk1: 'true'
    spec:
      containers:
        - image: 'registry.sigma.cmri/test/zookeeper:latest'
          imagePullPolicy: Always
          name: zw-zk1
          ports:
            - containerPort: 2181
              protocol: TCP
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: node3.sigma.cmri
      restartPolicy: Always
      serviceAccountName: mysvcacct
  triggers:
    - type: ConfigChange
