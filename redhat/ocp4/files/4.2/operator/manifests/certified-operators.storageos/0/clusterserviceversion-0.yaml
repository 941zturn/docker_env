apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: "[\n  {\n    \"apiVersion\": \"storageos.com/v1\",\n    \"kind\"\
      : \"StorageOSCluster\",\n    \"metadata\": {\n      \"name\": \"example-storageos\"\
      ,\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"secretRefName\"\
      : \"storageos-api\",\n      \"secretRefNamespace\": \"default\"\n    }\n  },\n\
      \  {\n    \"apiVersion\": \"storageos.com/v1\",\n    \"kind\": \"Job\",\n  \
      \  \"metadata\": {\n      \"name\": \"example-job\",\n      \"namespace\": \"\
      default\"\n    },\n    \"spec\": {\n      \"image\": \"registry.connect.redhat.com/storageos/cluster-operator:latest\"\
      ,\n      \"args\": [\"/var/lib/storageos\"],\n      \"mountPath\": \"/var/lib\"\
      ,\n      \"hostPath\": \"/var/lib\",\n      \"completionWord\": \"done\"\n \
      \   }\n  },\n  {\n    \"apiVersion\": \"storageos.com/v1\",\n    \"kind\": \"\
      StorageOSUpgrade\",\n    \"metadata\": {\n      \"name\": \"example-upgrade\"\
      ,\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"newImage\"\
      : \"registry.connect.redhat.com/storageos/cluster-operator:latest\"\n    }\n\
      \  }\n]"
    capabilities: Full Lifecycle
    categories: Storage
    certified: 'true'
    containerImage: registry.connect.redhat.com/storageos/cluster-operator:1.0.1
    createdAt: '2019-03-25T08:00:00'
    description: Cloud-native, persistent storage for containers.
    repository: https://github.com/storageos/cluster-operator
    support: StorageOS, Inc
  name: storageosoperator.v1.0.0
  namespace: placeholder
spec:
  customresourcedefinitions:
    owned:
      - description: StorageOS Cluster installs StorageOS in the cluster. It contains
          all the configuration for setting up a StorageOS cluster and also shows
          the status of the running StorageOS cluster.
        displayName: StorageOS Cluster
        kind: StorageOSCluster
        name: storageosclusters.storageos.com
        specDescriptors:
          - description: The name of the secret object that stores the api credentials.
            displayName: Cluster Secret
            path: secretRefName
          - description: The name of the namespace where the secret object that stores
              the api credentials exists.
            displayName: Cluster Secret Namespace
            path: secretRefNamespace
        statusDescriptors:
          - description: Set of nodes that are part of the StorageOS Cluster.
            displayName: Nodes
            path: nodes
          - description: The status of each of the members of StorageOS Cluster.
            displayName: Member Status
            path: members
            x-descriptors:
              - urn:alm:descriptor:com.tectonic.ui:podStatuses
          - description: The current status of the StorageOS Cluster.
            displayName: Status
            path: phase
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes.phase
          - description: Ready Nodes
            displayName: Ready
            path: ready
        version: v1
      - description: StorageOS Job creates special pods that run on all the node and
          perform an administrative task. This could be used for cluster maintenance
          tasks.
        displayName: StorageOS Job
        kind: Job
        name: jobs.storageos.com
        version: v1
      - description: StorageOS Upgrade automatically upgrades an existing StorageOS
          cluster as per the upgrade configuration.
        displayName: StorageOS Upgrade
        kind: StorageOSUpgrade
        name: storageosupgrades.storageos.com
        version: v1
  description: 'StorageOS is a cloud native, software-defined storage platform that

    transforms commodity server or cloud based disk capacity into

    enterprise-class persistent storage for containers. StorageOS is ideal for

    deploying databases, message busses, and other mission-critical stateful

    solutions, where rapid recovery and fault tolerance are essential.


    The StorageOS Operator installs and manages StorageOS within a cluster.

    Cluster nodes may contribute local or attached disk-based storage into a

    distributed pool, which is then available to all cluster members via a

    global namespace.


    Volumes are available across the cluster so if a container gets moved to

    another node it has immediate access to re-attach its data. Data can be

    protected with synchronous replication. Compression, caching, and QoS are

    enabled by default, and all volumes are thinly-provisioned.


    No other hardware or software is required.


    StorageOS is free to use up to 100GB of presented Storage, increasing to

    500GB after registration.  For additional capacity and support plans contact

    sales@storageos.com.


    ## Supported Features


    * **Rapid volume failover** - If a container gets re-scheduled to another

    node, any StorageOS volumes can be re-attached immediately, irrespective of

    where the data is located within the cluster.


    * **Data protection** - Data is replicated synchronously, up to 6 copies.


    * **Block checksums** - Each block is protected by a checksum which

    automatically detects any corruption of data in the underlying storage

    media.


    * **Thin provisioning** - Only consume the space you need in a storage pool.


    * **Data reduction** - Transparent inline data compression to reduce the

    amount of storage used in a backing store as well as reducing the network

    bandwidth requirements for replication.


    * **In-memory caching** - Speed up access to data even when accessed

    remotely.


    * **Quality of service** - Prioritize data traffic and address the “noisy

    neighbors” problem.


    * **Flexible configuration** - Use labels to automate data placement and

    enforce data policy such as replication. Ideal for compliance and infosec

    teams to enforce policies and rules while still enabling self-service

    storage by developers and DevOps teams.


    * **Access control** - Support multiple namespace – individual users are

    permissioned to specific storage namespaces.


    * **Observability & instrumentation** - Log streams for observability and

    Prometheus support for instrumentation.


    * **Deployment flexibility** - Scale up or scale out storage based on

    application requirements.  Works with any infrastructure – on-premises, VM,

    bare metal or cloud.


    * **Small footprint** - Lightweight container requires minimum 1 core with

    2GB of RAM.  Runs in user-space on any 64-bit Linux with no custom kernel

    modules.


    ## Required Parameters


    * `secretRefName` - the name of a secret that contains two keys for the `apiUsername`
    and `apiPassword` to be used as api credentials ([documentation](https://docs.storageos.com/docs/reference/cluster-operator/examples))

    * `secretRefNamespace` - the namespace where the api credentials secret is stored


    ## Required SCC


    On OpenShift, make sure to install the Security Context Constraint (SCC) in

    order for the StorageOS DaemonSet and StatefulSet pods to start properly:


    ``` $ oc adm policy add-scc-to-user privileged system:serviceaccount:<namespace>:storageos-daemonset-sa
    ```


    ``` $ oc adm policy add-scc-to-user privileged system:serviceaccount:<namespace>:storageos-statefulset-sa
    ```


    By default, the StorageOS cluster is deployed in `storageos` namespace. The

    service accounts in the above commands should be

    `:storageos:storageos-daemonset-sa` and `:storageos:storageos-statefulset-sa`.


    ## About StorageOS


    StorageOS gives users total control of their own storage environment –

    whether in the cloud or on-premises. Our customers take advantage of storage

    on any platform while maintaining full control of business requirements

    around availability, data mobility, performance, security, data residency

    compliance and business continuity.

    '
  displayName: StorageOS
  icon:
    - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOS4wLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9Ii05MCAyODQuNyA0MzAgNDMwIiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IC05MCAyODQuNyA0MzAgNDMwIiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxnPg0KCTxwYXRoIGZpbGw9IiM0RjUyNjMiIGQ9Ik0yNzguNSw0MjAuOWgtNzQuMWwtNS42LTkuN2wxMy42LTIzLjZsLTE4LjEtMzEuM0gxODBsMjcuNS00Ny43YzMtNS4xLDEuMi0xMS43LTMuOS0xNC42DQoJCWMtNS4xLTMtMTEuNy0xLjItMTQuNiwzLjlsLTM0LDU4LjhIOTMuMmwtMzQtNTguOGMtMi45LTUuMS05LjUtNi45LTE0LjYtMy45cy02LjksOS41LTMuOSwxNC42bDI3LjUsNDcuN0g1My45bC0xOC4xLDMxLjMNCgkJbDEzLjYsMjMuNmwtNS42LDkuOGgtNzQuMmwtNDMuMyw3NC45bDQzLjMsNzQuOWg3NC4xbDM0LDU4LjlMNzksNjI5bC0xLjIsMC44bDQ2LjQsNzcuMmw0Ni4yLTc3LjNsMCwwbDM0LTU4LjloNzQuMWw0My4zLTc0LjkNCgkJTDI3OC41LDQyMC45eiBNNTUuNSw0MDAuNWwtNy40LTEyLjhMNjAsMzY3aDE0LjNsMC4zLDAuNUw1NS41LDQwMC41eiBNMTczLjQsMzY3LjVsMC4zLTAuNUgxODhsMTEuOSwyMC42bC03LjQsMTIuOUwxNzMuNCwzNjcuNXoiDQoJCS8+DQoJPHBvbHlnb24gZmlsbD0iI0ZGRkZGRiIgcG9pbnRzPSI0My43LDQ0Mi4zIDQyLjgsNDQyLjMgLTE4LjEsNDQyLjMgLTQ4LjksNDk1LjggLTE4LjEsNTQ5LjMgNDMsNTQ5LjMgNDMuNyw1NDkuMyA3NC42LDQ5NS45IAkiLz4NCgk8cG9seWdvbiBmaWxsPSIjRkZGRkZGIiBwb2ludHM9IjI2Ni4xLDQ0Mi4zIDIwNC4zLDQ0Mi4zIDIwNC4zLDQ0Mi41IDE3My40LDQ5NS44IDIwNC4zLDU0OS4zIDIwNC40LDU0OS4zIDI2Ni4xLDU0OS4zIDI5Nyw0OTUuOCAJDQoJCSIvPg0KCTxwb2x5Z29uIGZpbGw9IiM2MUMyMDIiIHBvaW50cz0iMTU0LjksMzc4LjIgOTMuMSwzNzguMiA5My4xLDM3OC4zIDYyLjMsNDMxLjcgOTMuMSw0ODUuMiA5My4yLDQ4NS4yIDE1NC45LDQ4NS4yIDE4NS44LDQzMS43IAkiLz4NCgk8cG9seWdvbiBmaWxsPSIjNjFDMjAyIiBwb2ludHM9IjE1Mi4xLDYxOC40IDE1Mi4xLDYxOC40IDEyNCw2NjUuMiA5Ni4yLDYxOC45IDk2LjIsNjE4LjkgNjIuMiw1NjAuMSA4OC4zLDUxNC45IDkzLjEsNTA2LjYgDQoJCTE1NC45LDUwNi42IDE4NS44LDU2MC4xIAkiLz4NCjwvZz4NCjxyZWN0IHg9Ii0xMDUiIHk9IjI3MC43IiBmaWxsPSJub25lIiB3aWR0aD0iNDU4IiBoZWlnaHQ9IjQ1OCIvPg0KPC9zdmc+DQo=
      mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - storageos.com
              resources:
                - storageosclusters
                - storageosupgrades
                - jobs
              verbs:
                - '*'
            - apiGroups:
                - apps
              resources:
                - statefulsets
                - daemonsets
              verbs:
                - '*'
            - apiGroups:
                - ''
              resources:
                - nodes
              verbs:
                - list
                - watch
                - get
                - update
            - apiGroups:
                - ''
              resources:
                - pods
              verbs:
                - list
                - watch
                - get
                - update
                - patch
                - delete
            - apiGroups:
                - ''
              resources:
                - events
                - namespaces
                - serviceaccounts
                - secrets
                - services
                - persistentvolumeclaims
                - persistentvolumes
              verbs:
                - create
                - patch
                - get
                - list
                - delete
                - watch
                - update
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - roles
                - rolebindings
                - clusterroles
                - clusterrolebindings
              verbs:
                - create
                - delete
            - apiGroups:
                - storage.k8s.io
              resources:
                - storageclasses
                - volumeattachments
                - csinodeinfos
              verbs:
                - create
                - delete
                - watch
                - list
                - get
                - update
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - create
                - delete
            - apiGroups:
                - csi.storage.k8s.io
              resources:
                - csidrivers
              verbs:
                - create
                - delete
          serviceAccountName: storageos-operator
      deployments:
        - name: storageos-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: storageos-operator
            template:
              metadata:
                labels:
                  name: storageos-operator
                name: storageos-operator
              spec:
                containers:
                  - command:
                      - cluster-operator
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: OPERATOR_NAME
                        value: cluster-operator
                    image: registry.connect.redhat.com/storageos/cluster-operator:1.0.1
                    name: storageos-operator
                    ports:
                      - containerPort: 8080
                        name: metrics
                serviceAccountName: storageos-operator
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - storageos
    - storage
    - persistent storage
    - open source
  labels:
    operated-by: storageosoperator
  links:
    - name: Documentation
      url: https://docs.storageos.com/
    - name: StorageOS Operator Source Code
      url: https://github.com/storageos/cluster-operator
  maintainers:
    - email: support@storageos.com
      name: StorageOS, Inc
  maturity: stable
  minKubeVersion: 1.10.0
  provider:
    name: StorageOS, Inc
  selector:
    matchLabels:
      operated-by: storageosoperator
  version: 1.0.0
