---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es2
  namespace: datalake
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        service.alauda.io/name: es2
    spec:
      containers:
      - env:
        - name: cluster.name
          value: "cnpcrd-test"
        - name: ES_JAVA_OPTS
          value: "-Xms8G -Xmx8G"
        - name: node.name
          value: "11.11.157.146"
        - name: discovery.zen.minimum_master_nodes
          value: 1
        - name: discovery.zen.ping.unicast.hosts
          value: '["11.11.157.148","11.11.157.146","11.11.157.147"]'
        - name: bootstrap.memory_lock
          value: "true"
        image: 11.11.157.144:5000/elasticsearch:es_ai_a6
        imagePullPolicy: Always
        name: es2
        resources:
          limits:
            cpu: "2"
            memory: 8G
          requests:
            cpu: "2"
            memory: 8G
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: host-path-0-1
        - mountPath: /usr/share/elasticsearch/log
          name: host-path-0-2
      hostNetwork: true
      nodeSelector:
        ip: 11.11.157.146
      volumes:
      - hostPath:
          path: /alauda_data/es/data
        name: host-path-0-1
      - hostPath:
          path: /alauda_data/es/log
        name: host-path-0-2
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es3
  namespace: datalake
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        service.alauda.io/name: es3
    spec:
      containers:
      - env:
        - name: cluster.name
          value: "cnpcrd-test"
        - name: ES_JAVA_OPTS
          value: "-Xms8G -Xmx8G"
        - name: node.name
          value: "11.11.157.147"
        - name: discovery.zen.minimum_master_nodes
          value: 1
        - name: discovery.zen.ping.unicast.hosts
          value: '["11.11.157.148","11.11.157.146","11.11.157.147"]'
        - name: bootstrap.memory_lock
          value: "true"
        image: 11.11.157.144:5000/elasticsearch:es_ai_a6
        imagePullPolicy: Always
        name: es3
        resources:
          limits:
            cpu: "2"
            memory: 8G
          requests:
            cpu: "2"
            memory: 8G
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: host-path-0-1
        - mountPath: /usr/share/elasticsearch/log
          name: host-path-0-2
      hostNetwork: true
      nodeSelector:
        ip: 11.11.157.147
      volumes:
      - hostPath:
          path: /alauda_data/es/data
        name: host-path-0-1
      - hostPath:
          path: /alauda_data/es/log
        name: host-path-0-2
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es4
  namespace: datalake
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        service.alauda.io/name: es4
    spec:
      containers:
      - env:
        - name: cluster.name
          value: "cnpcrd-test"
        - name: ES_JAVA_OPTS
          value: "-Xms8G -Xmx8G"
        - name: node.name
          value: "11.11.157.148"
        - name: discovery.zen.minimum_master_nodes
          value: 1
        - name: discovery.zen.ping.unicast.hosts
          value: '["11.11.157.148","11.11.157.146","11.11.157.147"]'
        - name: bootstrap.memory_lock
          value: "true"
        image: 11.11.157.144:5000/elasticsearch:es_ai_a6
        imagePullPolicy: Always
        name: es4
        resources:
          limits:
            cpu: "2"
            memory: 8G
          requests:
            cpu: "2"
            memory: 8G
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: host-path-0-1
        - mountPath: /usr/share/elasticsearch/log
          name: host-path-0-2
      hostNetwork: true
      nodeSelector:
        ip: 11.11.157.148
      volumes:
      - hostPath:
          path: /alauda_data/es/data
        name: host-path-0-1
      - hostPath:
          path: /alauda_data/es/log
        name: host-path-0-2
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: kibana
  namespace: datalake
spec:
  replicas: 1
  selector:
    matchLabels:
      component: kibana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        service.alauda.io/name: kibana
        component: kibana
    spec:
      containers:
      - env:
        - name: elasticsearch.url
          value: http://11.11.157.148:9200
        name: kibana
        image: 11.11.157.144:5000/kibana-oss:6.3.1
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "2"
            memory: 4G
      nodeSelector:
        ip: 11.11.157.145
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: elasticsearch-hq
  namespace: datalake
spec:
  replicas: 1
  selector:
    matchLabels:
      component: elasticsearch-hq
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        service.alauda.io/name: elasticsearch-hq
        component: elasticsearch-hq
    spec:
      containers:
      - env:
        - name: HQ_DEFAULT_URL
          value: http://11.11.157.148:9200
        name: elasticsearch-hq
        image: 11.11.157.144:5000/elasticsearch-hq:wzh
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "1"
            memory: 2G
        ports:
          - containerPort: 5000
            name: "http"
      nodeSelector:
        es: elasticsearch-hq