version: '3'
services:
  zoo1:
    image: zookeeper:3.4.12
    restart: unless-stopped
    hostname: zoo1
    # ports:
    #   - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - kafka_zoo1_data:/data
      - kafka_zoo1_datalog:/datalog
    networks:
      - esnet

  kafka1:
    # image: confluentinc/cp-kafka:4.1.1-2
    image: wurstmeister/kafka:0.11.0.0
    hostname: kafka1
    # ports:
    #   - "9092:9092"
    environment:
      # add the entry "127.0.0.1    kafka1" to your /etc/hosts file
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_kafka1_data:/var/lib/kafka/data
    ports:
      - "0.0.0.0:9092:9092"
    networks:
      - esnet
    depends_on:
      - zoo1

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:4.1.1-2
    hostname: kafka-schema-registry
    restart: unless-stopped
    # ports:
    #   - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zoo1:2181
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo1
      - kafka1
    networks:
      - esnet

  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.4
    hostname: kafka-schema-registry-ui
    ports:
      - "0.0.0.0:8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
      PROXY: "true"
    depends_on:
      - kafka-schema-registry
    networks:
      - esnet

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:4.1.1-2
    hostname: kafka-rest-proxy
    # ports:
    #   - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:9092
    depends_on:
      - zoo1
      - kafka1
      - kafka-schema-registry
    networks:
      - esnet

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.3
    hostname: kafka-topics-ui
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      PROXY: "true"
    depends_on:
      - zoo1
      - kafka1
      - kafka-schema-registry
      - kafka-rest-proxy
    networks:
      - esnet


  # zoonavigator-web:
  #   image: elkozmon/zoonavigator-web:0.5.0
  #   ports:
  #    - "0.0.0.0:8004:8000"
  #   environment:
  #     API_HOST: "zoonavigator-api"
  #     API_PORT: 9000
  #   links:
  #    - zoonavigator-api
  #   depends_on:
  #    - zoonavigator-api
  #   restart: unless-stopped
  #   networks:
  #     - esnet

  # zoonavigator-api:
  #   image: elkozmon/zoonavigator-api:0.5.0
  #   environment:
  #     SERVER_HTTP_PORT: 9000
  #   restart: unless-stopped
  #   depends_on:
  #     - zoo1
  #   networks:
  #     - esnet

  # oracledb:
  #   image: oracle/database:12.2.0.1-ee
  #   environment:
  #     ORACLE_PWD: top_secret
  #   restart: unless-stopped
  #   volumes:
  #     - /home/vagrant/oradata/:/opt/oracle/oradata
  #   depends_on:
  #     - zoo1
  #   networks:
  #     - esnet

  oracledb:
    image: oracle-11g:wzh.11.2.0.4.cd_location
    restart: unless-stopped
    shm_size: '2gb'
    ports:
      - "0.0.0.0:1521:1521"
    depends_on:
      - zoo1
    networks:
      - esnet
  
  dbz-connect:
    # image: dbz-oracle-12-2:wzh
    # image: dbz-oracle-11-2:wzh
    image: dbz-oracle:wzh
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      BOOTSTRAP_SERVERS: "kafka1:9092"
      LD_LIBRARY_PATH: "/instant_client"
      # KAFKA_DEBUG: "true"
      # DEBUG_SUSPEND_FLAG: "n"
      # LOG_LEVEL: "DEBUG"
    restart: unless-stopped
    ports:
      - "0.0.0.0:5005:5005"
    depends_on:
      - oracledb
    networks:
      - esnet

volumes:
  hadoopmysql:
    driver: local
  hadoop_namenode_data:
    driver: local
  hadoop_sec_namenode_data:
    driver: local
  hadoop_datanode1_data:
    driver: local
  hadoop_datanode1_1_data:
    driver: local
  hadoop_datanode2_data:
    driver: local
  hadoop_datanode2_1_data:
    driver: local
  hadoop_datanode3_data:
    driver: local
  hadoop_datanode3_1_data:
    driver: local
  kafka_zoo1_data:
    driver: local
  kafka_zoo1_datalog:
    driver: local
  kafka_kafka1_data:
    driver: local
  esdata1:
    driver: local
  esdata2:
    driver: local
  esdata3:
    driver: local

networks:
  esnet: