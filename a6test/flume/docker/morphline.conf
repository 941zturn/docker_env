morphlines : [
  {
    id : morphline_id
 
    # Import the Kite SDK and any custom libs you may have and need
    importCommands : [
      "org.kitesdk.**",
      "com.cloudera.**", 
      "org.apache.solr.**",
      "com.a8c.**"
    ]
 
    commands : [
      # Each command consumes the output record of the previous command
      # and pipes another record downstream.
 
      {
        # Parse input attachment and emit a record for each input line
        readJson {}
      }

      {
        logDebug { format : "**********wzhlog read record: {} **********", args : ["@{}"] }
      }

      {
       
        extractJsonPaths {
          flatten : true
          paths : {
            wzh_timestamp : "/@timestamp"
            wzh_message : "/message"
            wzh_source : "/source"
          }
        }

      }

      { logInfo { format : "**********wzhlog output record: {}", args : ["@{}"] }}
 
      {
        # Set the schema for the Flume HDFS sink
        setValues {
          # flume.avro.schema.url : "/opt/schema/schema.avsc"
          _attachment_body : []
          _attachment_mimetype: []
        }
      }

      { logInfo { format : "**********wzhlog setValues record: {}", args : ["@{}"] }}

      {
        # Converts this to an Avro record according to schema
        toAvro {
          schemaFile : "/opt/schema/schema.avsc"
        }
      }

      {
        logDebug { format : "**********wzhlog AFTER toAvro: {} **********", args : ["@{}"] }
      }

 
      {
        # Serialize the Avro record into a byte array, compressed with snappy
        writeAvroToByteArray : {
          format : containerlessBinary
          # codec : snappy
        }
      }
      # {
      #   writeAvroToByteArray {
      #       format : containerlessJSON
      #   }
      # }
 
    ]
  }
]