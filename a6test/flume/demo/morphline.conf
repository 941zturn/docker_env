morphlines : [
  {
    id : morphline_id
 
    # Import the Kite SDK and any custom libs you may have and need
    importCommands : [
      "org.kitesdk.**",
      "com.a8c.**"
    ]
 
    commands : [
      # Each command consumes the output record of the previous command
      # and pipes another record downstream.
 
      {
        # Parse input attachment and emit a record for each input line
        readLine {
          charset : UTF-8
        }
      }
 
      {
        # More commands for your ETL process
      }
 
      {
        # Say we set a field named `eventmarker` somewhere above to indicate the
        # type of record this is and we have a different schemas
        if {
          conditions : [
            { equals { eventmarker : "type1" } }
          ]
          then : [
 
            {
              # Set the schema for the Flume HDFS sink
              setValues {
                flume.avro.schema.url : "file:/path/to/schema/type1.avsc"
              }
            }
 
            {
              # Converts this to an Avro record according to schema
              toAvro {
                schemaFile : /path/to/schema/type1.avsc
              }
            }
 
          ]
          else : [
 
            {
              setValues {
                flume.avro.schema.url : "file:/path/to/schema/type2.avsc"
              }
            }
 
            {
              toAvro {
                schemaFile : /path/to/schema/type2.avsc
              }
            }
 
          ]
        }
      }
 
      {
        # Serialize the Avro record into a byte array, compressed with snappy
        writeAvroToByteArray : {
          format : containerlessBinary
          codec : snappy
        }
      }
 
    ]
  }
]