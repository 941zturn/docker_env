version: '3'
services:

  hadoopmysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "hive"
    restart: unless-stopped
    networks:
      - esnet
    volumes:
      - hadoopmysql:/var/lib/mysql

  namenode:
    image: cdh:wzh
    environment:
      NAME_NODE_PORT: 9000
      NAME_NODE_ADDR: namenode
      SECOND_NAMENODE_ADDRESS: secnamenode
      NODE_IPS: "datanode1,datanode2,datanode3"
      SERVER_ROLE: "nn"
      FORMAT_NAMENODE: "true"
      START_YARN: "true"
      HIVE_MYSQL_ADDR: hadoopmysql
      YARN_DIR: "/data/yarn"
      DATA_DIR: "/data/hdfs/dn,/data2/hdfs/dn"
      NAME_DIR: "/data/hdfs/nn"
      TMP_DIR: "/data/hdfs/tmp"
      IMPALA_CATALOG_SERVICE_HOST: secnamenode
      IMPALA_STATE_STORE_HOST: secnamenode
      KUDU_MASTER_HOST: "kudu-master:7051,kudu-master2:7051"
    restart: unless-stopped
    ports:
      - "0.0.0.0:8088:8088"
      - "0.0.0.0:50070:50070"
    networks:
      - esnet
    volumes:
      - hadoop_namenode_data:/data
    depends_on:
      - hadoopmysql
  
  secnamenode:
    image: cdh:wzh
    environment:
      NAME_NODE_PORT: 9000
      NAME_NODE_ADDR: namenode
      SECOND_NAMENODE_ADDRESS: secnamenode
      NODE_IPS: "datanode1,datanode2,datanode3"
      SERVER_ROLE: "sn"
      FORMAT_NAMENODE: "true"
      START_YARN: "true"
      HIVE_MYSQL_ADDR: hadoopmysql
      YARN_DIR: "/data/yarn"
      DATA_DIR: "/data/hdfs/dn,/data2/hdfs/dn"
      NAME_DIR: "/data/hdfs/nn"
      TMP_DIR: "/data/hdfs/tmp"
      IMPALA_CATALOG_SERVICE_HOST: secnamenode
      IMPALA_STATE_STORE_HOST: secnamenode
      KUDU_MASTER_HOST: "kudu-master:7051,kudu-master2:7051"
    restart: unless-stopped
    ports:
      - "0.0.0.0:50090:50090"
    networks:
      - esnet
    volumes:
      - hadoop_sec_namenode_data:/data
    depends_on:
      - hadoopmysql

  datanode1:
    image: cdh:wzh
    environment:
      NAME_NODE_PORT: 9000
      NAME_NODE_ADDR: namenode
      SECOND_NAMENODE_ADDRESS: secnamenode
      NODE_IPS: "datanode1,datanode2,datanode3"
      SERVER_ROLE: "dn"
      FORMAT_NAMENODE: "true"
      START_YARN: "true"
      YARN_DIR: "/data/yarn"
      DATA_DIR: "/data/hdfs/dn,/data2/hdfs/dn"
      NAME_DIR: "/data/hdfs/nn"
      TMP_DIR: "/data/hdfs/tmp"
      IMPALA_CATALOG_SERVICE_HOST: secnamenode
      IMPALA_STATE_STORE_HOST: secnamenode
      KUDU_MASTER_HOST: "kudu-master:7051,kudu-master2:7051"
    restart: unless-stopped
    networks:
      - esnet
    volumes:
      - hadoop_datanode1_data:/data
      - hadoop_datanode1_1_data:/data2
    depends_on:
      - namenode

  datanode2:
    image: cdh:wzh
    environment:
      NAME_NODE_PORT: 9000
      NAME_NODE_ADDR: namenode
      SECOND_NAMENODE_ADDRESS: secnamenode
      NODE_IPS: "datanode1,datanode2,datanode3"
      SERVER_ROLE: "dn"
      FORMAT_NAMENODE: "true"
      START_YARN: "true"
      YARN_DIR: "/data/yarn"
      DATA_DIR: "/data/hdfs/dn,/data2/hdfs/dn"
      NAME_DIR: "/data/hdfs/nn"
      TMP_DIR: "/data/hdfs/tmp"
      IMPALA_CATALOG_SERVICE_HOST: secnamenode
      IMPALA_STATE_STORE_HOST: secnamenode
      KUDU_MASTER_HOST: "kudu-master:7051,kudu-master2:7051"
    restart: unless-stopped
    networks:
      - esnet
    volumes:
      - hadoop_datanode2_data:/data
      - hadoop_datanode2_1_data:/data2
    depends_on:
      - namenode

  datanode3:
    image: cdh:wzh
    environment:
      NAME_NODE_PORT: 9000
      NAME_NODE_ADDR: namenode
      SECOND_NAMENODE_ADDRESS: secnamenode
      NODE_IPS: "datanode1,datanode2,datanode3"
      SERVER_ROLE: "dn"
      FORMAT_NAMENODE: "true"
      START_YARN: "true"
      YARN_DIR: "/data/yarn"
      DATA_DIR: "/data/hdfs/dn,/data2/hdfs/dn"
      NAME_DIR: "/data/hdfs/nn"
      TMP_DIR: "/data/hdfs/tmp"
      IMPALA_CATALOG_SERVICE_HOST: secnamenode
      IMPALA_STATE_STORE_HOST: secnamenode
      KUDU_MASTER_HOST: "kudu-master:7051,kudu-master2:7051"
    restart: unless-stopped
    networks:
      - esnet
    volumes:
      - hadoop_datanode3_data:/data
      - hadoop_datanode3_1_data:/data2
    depends_on:
      - namenode

  flume:
    image: cdh:wzh
    environment:
      NAME_NODE_PORT: 9000
      NAME_NODE_ADDR: namenode
      SECOND_NAMENODE_ADDRESS: secnamenode
      NODE_IPS: "datanode1,datanode2,datanode3"
      SERVER_ROLE: "flume"
      FORMAT_NAMENODE: "true"
      START_YARN: "true"
      YARN_DIR: "/data/yarn"
      DATA_DIR: "/data/hdfs/dn,/data2/hdfs/dn"
      NAME_DIR: "/data/hdfs/nn"
      TMP_DIR: "/data/hdfs/tmp"
      IMPALA_CATALOG_SERVICE_HOST: secnamenode
      IMPALA_STATE_STORE_HOST: secnamenode
      KUDU_MASTER_HOST: "kudu-master:7051,kudu-master2:7051"
    restart: unless-stopped
    networks:
      - esnet
    depends_on:
      - namenode

  kudu-master:
    image: kudu:wzh
    environment:
      - KUDU_MASTER=kudu-master,kudu-master2
    command: master
    ports:
      - 0.0.0.0:8051:8051
    volumes:
      - kudu-master:/var/lib/kudu/
    networks:
      - esnet

  kudu-master2:
    image: kudu:wzh
    environment:
      - KUDU_MASTER=kudu-master,kudu-master2
    command: master
    ports:
      - 0.0.0.0:18051:8051
    volumes:
      - kudu-master2:/var/lib/kudu/
    networks:
      - esnet

  kudu-tserver:
    image: kudu:wzh
    environment:
      - KUDU_MASTER=kudu-master,kudu-master2
    command: tserver
    ports:
      - 0.0.0.0:8050:8050
    volumes:
      - kudu-tserver:/var/lib/kudu/
    networks:
      - esnet

  kudu-tserver2:
    image: kudu:wzh
    environment:
      - KUDU_MASTER=kudu-master,kudu-master2
    command: tserver
    ports:
      - 0.0.0.0:18050:8050
    volumes:
      - kudu-tserver2:/var/lib/kudu/
    networks:
      - esnet
  
  kudu-tserver3:
    image: kudu:wzh
    environment:
      - KUDU_MASTER=kudu-master,kudu-master2
    command: tserver
    ports:
      - 0.0.0.0:28050:8050
    volumes:
      - kudu-tserver3:/var/lib/kudu/
    networks:
      - esnet

  nifi:
    image: apache/nifi
    ports:
      - 0.0.0.0:8080:8080
    networks:
      - esnet

  filebeat:
    image: filebeat:wzh
    container_name: filebeat
    volumes:
      - ./conf/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/log:/mnt:ro
    networks:
      - esnet
    depends_on:
      - kafka1
    user: root

  zoo1:
    image: zookeeper:3.4.12
    restart: unless-stopped
    hostname: zoo1
    # ports:
    #   - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - kafka_zoo1_data:/data
      - kafka_zoo1_datalog:/datalog
    networks:
      - esnet

  kafka1:
    image: confluentinc/cp-kafka:4.1.1-2
    hostname: kafka1
    # ports:
    #   - "9092:9092"
    environment:
      # add the entry "127.0.0.1    kafka1" to your /etc/hosts file
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_kafka1_data:/var/lib/kafka/data
    ports:
      - "0.0.0.0:9092:9092"
    networks:
      - esnet
    depends_on:
      - zoo1
      
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:4.1.1-2
    hostname: kafka-schema-registry
    restart: unless-stopped
    # ports:
    #   - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zoo1:2181
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo1
      - kafka1
    networks:
      - esnet

  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.4
    hostname: kafka-schema-registry-ui
    ports:
      - "0.0.0.0:8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
      PROXY: "true"
    depends_on:
      - kafka-schema-registry
    networks:
      - esnet

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:4.1.1-2
    hostname: kafka-rest-proxy
    # ports:
    #   - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:9092
    depends_on:
      - zoo1
      - kafka1
      - kafka-schema-registry
    networks:
      - esnet

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.3
    hostname: kafka-topics-ui
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      PROXY: "true"
    depends_on:
      - zoo1
      - kafka1
      - kafka-schema-registry
      - kafka-rest-proxy
    networks:
      - esnet

volumes:
  kudu-master:
    driver: local
  kudu-master2:
    driver: local
  kudu-tserver:
    driver: local
  kudu-tserver2:
    driver: local
  kudu-tserver3:
    driver: local
  hadoopmysql:
    driver: local
  hadoop_namenode_data:
    driver: local
  hadoop_sec_namenode_data:
    driver: local
  hadoop_datanode1_data:
    driver: local
  hadoop_datanode1_1_data:
    driver: local
  hadoop_datanode2_data:
    driver: local
  hadoop_datanode2_1_data:
    driver: local
  hadoop_datanode3_data:
    driver: local
  hadoop_datanode3_1_data:
    driver: local
  kafka_zoo1_data:
    driver: local
  kafka_zoo1_datalog:
    driver: local
  kafka_kafka1_data:
    driver: local
  esdata1:
    driver: local
  esdata2:
    driver: local
  esdata3:
    driver: local

networks:
  esnet: