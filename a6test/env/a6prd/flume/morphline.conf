morphlines : [
  {
    id : morphline_id
 
    # Import the Kite SDK and any custom libs you may have and need
    importCommands : [
      "org.kitesdk.**",
      "com.cloudera.**", 
      "org.apache.solr.**",
      "com.a8c.**"
    ]
 
    commands : [
      # Each command consumes the output record of the previous command
      # and pipes another record downstream.
 
      {
        # Parse input attachment and emit a record for each input line
        readJson {}
      }

      {
        logDebug { format : "**********wzhlog read record: {} **********", args : ["@{}"] }
      }

      {
       
        extractJsonPaths {
          flatten : true
          paths : {
            ESINDEX : "/data[0]/ESINDEX"
            DSID : "/data[0]/DSID"
            SHUTIN_REASON_ID_2 : "/data[0]/SHUTIN_REASON_ID_2"
            ESID : "/data[0]/ESID"
          }
        }

      }

      { logInfo { format : "**********wzhlog output record: {}", args : ["@{}"] }}
 


      { logInfo { format : "**********wzhlog setValues record: {}", args : ["@{}"] }}

      {
        # Converts this to an Avro record according to schema
        toAvro {
          schemaFile : "/opt/schema/a6.schema.avsc"
        }
      }

      {
        logDebug { format : "**********wzhlog AFTER toAvro: {} **********", args : ["@{}"] }
      }

 
      {
        # Serialize the Avro record into a byte array, compressed with snappy
        writeAvroToByteArray : {
          format : containerlessBinary
          codec : snappy
        }
      }
      # {
      #   writeAvroToByteArray {
      #       format : containerlessJSON
      #   }
      # }
 
    ]
  }
]